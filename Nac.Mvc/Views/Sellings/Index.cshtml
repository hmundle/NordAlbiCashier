@model IEnumerable<SellingsAggregatedV>
@{
    ViewData["Title"] = "Verkäufe aggregiert";
    ViewData["UseDatatables"] = true;
}

<h3>
    <span class="pe-2">@ViewData["Title"]</span>
    <span id="sum" class=" px-2 py-1 mx-3 bg-primary text-light fw-bold lead">
        Summe:
    </span>
</h3>

<table id="myDataTable" class="table table-striped nowrap" style="width:100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BarCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Group)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Count)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SumQuantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SumFinalPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SumPriceManual)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SumWeight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BasePrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NewestCreated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Operator)
            </th>
        </tr>
    </thead>
</table>

@section Scripts{
    <script>
        $(document).ready(function () {
            sumField = $("#sum");
        });

        function sumUpAllPrices() {
            const initialValue = 0;
            return table.data().reduce(
                (accumulator, currentValue) => accumulator + currentValue.sumFinalPrice,
                initialValue
            );
        }

        var onTableRender = function () {
            const sum = sumUpAllPrices();
            const sumString = sum.toLocaleString('de-DE', { style: 'currency', currency: 'EUR' });
            sumField.html(`Summe: ${sumString}`);
        }

        const rowOrder = [5, 'desc'];
        const pageLength = 10000;
        const columnSearchBuilderSearch = [0, 1];
        const columnSearchBuilderDate = [10];
        //const columnSearchBuilderNum = [9, 10];
        const columnsSearchPanesEnabled = [
            3, 11
        ];
        //const enableRowSelection = true;
        const columnsDefinition = [
            { data: "name", name: "Name", orderable: true },
            { data: "barCode", name: "BarCode", orderable: true },
            { data: "category", name: "Category", orderable: true },
            { data: "group", name: "Group", orderable: true },
            { data: "count", name: "Count", orderable: true },
            { data: "sumQuantity", name: "SumQuantity", orderable: true },
            {
                data: "sumFinalPrice", name: "SumFinalPrice", orderable: true,
                render: DataTable.render.number(null, null, 2, '€')
            },
            {
                data: "sumPriceManual", name: "SumPriceManual", orderable: true,
                render: DataTable.render.number(null, null, 2, '€')
            },
            { data: "sumWeight", name: "SumWeight", orderable: true },
            {
                data: "basePrice", name: "BasePrice", orderable: true,
                render: DataTable.render.number(null, null, 2, '€')
            },
            { data: "newestCreated", name: "NewestCreated", orderable: false },
            { data: "operator", name: "Operator", orderable: false, visible: false },
        ];
    </script>
}
